import org.apache.tools.ant.filters.ReplaceTokens
import com.github.jengelman.gradle.plugins.shadow.tasks.ConfigureShadowRelocation
plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.72'
    id 'java-gradle-plugin'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '6.0.0'
    id 'com.gradle.plugin-publish' version '0.12.0'
}

repositories {
    mavenCentral()
    maven {
        url 'https://repo.bristermitten.me/repository/maven-public/'
    }
}

dependencies {
    shadow gradleApi()
    implementation project(':common-lib')
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.google.guava:guava:21.0'
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        filter ReplaceTokens, tokens: [version: version]
    }
}



configurations.compile.dependencies.remove dependencies.gradleApi()
shadowJar {
    classifier = ''
}

task relocateShadowJar(type: ConfigureShadowRelocation) {
    target = tasks.shadowJar
}

tasks.shadowJar.dependsOn tasks.relocateShadowJar


publishing {
    publications {
        shadow(MavenPublication) { publication ->
            project.shadow.component(publication)
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = "https://repo.bristermitten.me/repository/maven-releases"
            def snapshotsRepoUrl = "https://repo.bristermitten.me/repository/maven-snapshots"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

            credentials {
                username project.hasProperty('mavenUser') ? mavenUser : System.env["MAVEN_USER"]
                password project.hasProperty('mavenPassword') ? mavenPassword : System.env["MAVEN_PASSWORD"]
            }
        }
    }
}

pluginBundle {
    website = 'https://github.com/knightzmc/pdm'
    vcsUrl = 'https://github.com/knightzmc/pdm'
    tags = ['spigot', 'shading', 'runtime', 'bukkit', 'plugin']
    withDependencies {
        it.clear()
    }
}

gradlePlugin {
    plugins {
        pdm {
            id = 'me.bristermitten.pdm'
            displayName = 'Plugin Dependency Manager'
            description = 'Sets up PDM to automatically download any dependencies for Spigot plugins'
            implementationClass = 'me.bristermitten.pdm.PDM'
        }
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}


artifacts {
    archives shadowJar
    archives sourcesJar
}
